#!/usr/bin/env ruby

# hookit is installed as a bundled app, so we need bundler to load it for us
$:.unshift  '/opt/gomicro/hookit/vendor/bundle'
require 'bundler/setup'

# load hookit/setup to bootstrap hookit and import the dsl
require 'hookit/setup'

# pipe the backup into mongodb client to restore from backup
execute "restore from backup" do
  command <<-EOF
    bash -c 'ssh -o StrictHostKeyChecking=no #{payload[:warehouse][:host]} \
    "cat /data/var/db/mongodb/#{payload[:warehouse][:backup_id]}.tgz" \
      | tar -C / -zxf -
    /data/bin/mongorestore --oplogReplay --drop /mongodump
    for i in ${PIPESTATUS[@]}; do
      if [[ $i -ne 0 ]]; then
        exit $i
      fi
    done
    '
  EOF
end

execute "reconfig replica set" do
  command <<-EOF
    /data/bin/mongo --eval 'rs.reconfig({ _id : "gomicro", members : [ {_id : 0, host : "#{payload[:members].select {|member| member[:role] == "primary"}[0][:local_ip]}:27017", priority: 1}, {_id : 1, host : "#{payload[:members].select {|member| member[:role] == "secondary"}[0][:local_ip]}:27017", priority: 0.5}, {_id : 2, host : "#{payload[:members].select {|member| member[:role] == "arbitrator"}[0][:local_ip]}", arbiterOnly: true} ] }, {force : true});'
  EOF
  user 'gomicro'
end